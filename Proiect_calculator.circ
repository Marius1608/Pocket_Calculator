<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project source="3.8.0" version="1.0">
  This file is intended to be loaded by Logisim-evolution v3.8.0(https://github.com/logisim-evolution/).

  <lib desc="#Wiring" name="0">
    <tool name="Splitter">
      <a name="facing" val="west"/>
      <a name="fanout" val="7"/>
      <a name="incoming" val="7"/>
    </tool>
    <tool name="Pin">
      <a name="appearance" val="classic"/>
    </tool>
    <tool name="Power">
      <a name="facing" val="east"/>
    </tool>
    <tool name="Ground">
      <a name="facing" val="west"/>
    </tool>
  </lib>
  <lib desc="#Gates" name="1"/>
  <lib desc="#Plexers" name="2"/>
  <lib desc="#Arithmetic" name="3"/>
  <lib desc="#Memory" name="4"/>
  <lib desc="#I/O" name="5">
    <tool name="7-Segment Display">
      <a name="active" val="false"/>
      <a name="decimalPoint" val="false"/>
    </tool>
  </lib>
  <lib desc="#TTL" name="6"/>
  <lib desc="#TCL" name="7"/>
  <lib desc="#Base" name="8"/>
  <lib desc="#BFH-Praktika" name="9"/>
  <lib desc="#Input/Output-Extra" name="10"/>
  <lib desc="#Soc" name="11"/>
  <main name="main"/>
  <options>
    <a name="gateUndefined" val="ignore"/>
    <a name="simlimit" val="1000"/>
    <a name="simrand" val="0"/>
  </options>
  <mappings>
    <tool lib="8" map="Button2" name="Poke Tool"/>
    <tool lib="8" map="Button3" name="Menu Tool"/>
    <tool lib="8" map="Ctrl Button1" name="Menu Tool"/>
  </mappings>
  <toolbar>
    <tool lib="8" name="Poke Tool"/>
    <tool lib="8" name="Edit Tool"/>
    <tool lib="8" name="Wiring Tool"/>
    <tool lib="8" name="Text Tool"/>
    <sep/>
    <tool lib="0" name="Pin">
      <a name="width" val="8"/>
    </tool>
    <tool lib="0" name="Pin">
      <a name="facing" val="west"/>
      <a name="output" val="true"/>
    </tool>
    <sep/>
    <tool lib="1" name="NOT Gate"/>
    <tool lib="1" name="AND Gate"/>
    <tool lib="1" name="OR Gate"/>
    <tool lib="1" name="XOR Gate"/>
    <tool lib="1" name="NAND Gate"/>
    <tool lib="1" name="NOR Gate"/>
    <sep/>
    <tool lib="4" name="D Flip-Flop"/>
    <tool lib="4" name="Register"/>
  </toolbar>
  <circuit name="main">
    <a name="appearance" val="logisim_evolution"/>
    <a name="circuit" val="main"/>
    <a name="circuitnamedboxfixedsize" val="true"/>
    <a name="simulationFrequency" val="128.0"/>
    <comp lib="0" loc="(1070,70)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="facing" val="west"/>
      <a name="output" val="true"/>
    </comp>
    <comp lib="0" loc="(1200,220)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="facing" val="west"/>
      <a name="output" val="true"/>
      <a name="width" val="8"/>
    </comp>
    <comp lib="0" loc="(1200,410)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="facing" val="west"/>
      <a name="output" val="true"/>
      <a name="width" val="16"/>
    </comp>
    <comp lib="0" loc="(1250,50)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="facing" val="west"/>
      <a name="output" val="true"/>
      <a name="width" val="8"/>
    </comp>
    <comp lib="0" loc="(1300,1070)" name="Splitter">
      <a name="fanout" val="7"/>
      <a name="incoming" val="7"/>
    </comp>
    <comp lib="0" loc="(1300,1230)" name="Splitter">
      <a name="fanout" val="7"/>
      <a name="incoming" val="7"/>
    </comp>
    <comp lib="0" loc="(1300,720)" name="Splitter">
      <a name="fanout" val="7"/>
      <a name="incoming" val="7"/>
    </comp>
    <comp lib="0" loc="(1300,880)" name="Splitter">
      <a name="fanout" val="7"/>
      <a name="incoming" val="7"/>
    </comp>
    <comp lib="0" loc="(1370,120)" name="Splitter">
      <a name="bit1" val="0"/>
      <a name="bit2" val="0"/>
      <a name="bit3" val="0"/>
      <a name="bit4" val="1"/>
      <a name="bit5" val="1"/>
      <a name="bit6" val="1"/>
      <a name="bit7" val="1"/>
      <a name="incoming" val="8"/>
    </comp>
    <comp lib="0" loc="(1510,490)" name="Splitter">
      <a name="bit1" val="0"/>
      <a name="bit2" val="0"/>
      <a name="bit3" val="0"/>
      <a name="bit4" val="1"/>
      <a name="bit5" val="1"/>
      <a name="bit6" val="1"/>
      <a name="bit7" val="1"/>
      <a name="incoming" val="8"/>
    </comp>
    <comp lib="0" loc="(1890,300)" name="Splitter">
      <a name="fanout" val="7"/>
      <a name="incoming" val="7"/>
    </comp>
    <comp lib="0" loc="(1930,160)" name="Splitter">
      <a name="fanout" val="7"/>
      <a name="incoming" val="7"/>
    </comp>
    <comp lib="0" loc="(2030,670)" name="Splitter">
      <a name="fanout" val="7"/>
      <a name="incoming" val="7"/>
    </comp>
    <comp lib="0" loc="(2070,530)" name="Splitter">
      <a name="fanout" val="7"/>
      <a name="incoming" val="7"/>
    </comp>
    <comp lib="0" loc="(290,40)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="label" val="A"/>
      <a name="width" val="8"/>
    </comp>
    <comp lib="0" loc="(310,470)" name="Clock"/>
    <comp lib="0" loc="(380,20)" name="Clock"/>
    <comp lib="0" loc="(460,270)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="label" val="B"/>
      <a name="width" val="8"/>
    </comp>
    <comp lib="0" loc="(530,490)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="facing" val="west"/>
      <a name="output" val="true"/>
    </comp>
    <comp lib="0" loc="(580,330)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="facing" val="west"/>
      <a name="output" val="true"/>
    </comp>
    <comp lib="0" loc="(600,1400)" name="Splitter">
      <a name="fanout" val="7"/>
      <a name="incoming" val="7"/>
    </comp>
    <comp lib="0" loc="(600,630)" name="Splitter">
      <a name="bit1" val="0"/>
      <a name="bit10" val="2"/>
      <a name="bit11" val="2"/>
      <a name="bit12" val="3"/>
      <a name="bit13" val="3"/>
      <a name="bit14" val="3"/>
      <a name="bit15" val="3"/>
      <a name="bit2" val="0"/>
      <a name="bit3" val="0"/>
      <a name="bit4" val="1"/>
      <a name="bit5" val="1"/>
      <a name="bit6" val="1"/>
      <a name="bit7" val="1"/>
      <a name="bit8" val="2"/>
      <a name="bit9" val="2"/>
      <a name="fanout" val="4"/>
      <a name="incoming" val="16"/>
    </comp>
    <comp lib="0" loc="(610,470)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="facing" val="west"/>
      <a name="output" val="true"/>
      <a name="width" val="8"/>
    </comp>
    <comp lib="0" loc="(640,1260)" name="Splitter">
      <a name="fanout" val="7"/>
      <a name="incoming" val="7"/>
    </comp>
    <comp lib="0" loc="(680,60)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="facing" val="west"/>
      <a name="output" val="true"/>
    </comp>
    <comp lib="0" loc="(70,150)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="width" val="3"/>
    </comp>
    <comp lib="0" loc="(70,170)" name="Pin">
      <a name="appearance" val="NewPins"/>
    </comp>
    <comp lib="0" loc="(70,190)" name="Pin">
      <a name="appearance" val="NewPins"/>
    </comp>
    <comp lib="0" loc="(80,1220)" name="Splitter">
      <a name="bit1" val="0"/>
      <a name="bit2" val="0"/>
      <a name="bit3" val="0"/>
      <a name="bit4" val="1"/>
      <a name="bit5" val="1"/>
      <a name="bit6" val="1"/>
      <a name="bit7" val="1"/>
      <a name="incoming" val="8"/>
    </comp>
    <comp lib="0" loc="(850,190)" name="Pin">
      <a name="appearance" val="NewPins"/>
    </comp>
    <comp lib="5" loc="(1740,900)" name="7-Segment Display">
      <a name="active" val="false"/>
      <a name="decimalPoint" val="false"/>
    </comp>
    <comp lib="5" loc="(1780,900)" name="7-Segment Display">
      <a name="active" val="false"/>
      <a name="decimalPoint" val="false"/>
    </comp>
    <comp lib="5" loc="(1820,900)" name="7-Segment Display">
      <a name="active" val="false"/>
      <a name="decimalPoint" val="false"/>
    </comp>
    <comp lib="5" loc="(1860,900)" name="7-Segment Display">
      <a name="active" val="false"/>
      <a name="decimalPoint" val="false"/>
    </comp>
    <comp lib="5" loc="(2210,160)" name="7-Segment Display">
      <a name="active" val="false"/>
      <a name="decimalPoint" val="false"/>
      <a name="labelvisible" val="true"/>
    </comp>
    <comp lib="5" loc="(2250,160)" name="7-Segment Display">
      <a name="active" val="false"/>
      <a name="decimalPoint" val="false"/>
      <a name="labelvisible" val="true"/>
    </comp>
    <comp lib="5" loc="(2350,530)" name="7-Segment Display">
      <a name="active" val="false"/>
      <a name="decimalPoint" val="false"/>
    </comp>
    <comp lib="5" loc="(2390,530)" name="7-Segment Display">
      <a name="active" val="false"/>
      <a name="decimalPoint" val="false"/>
    </comp>
    <comp lib="5" loc="(920,1260)" name="7-Segment Display">
      <a name="active" val="false"/>
      <a name="decimalPoint" val="false"/>
      <a name="labelvisible" val="true"/>
    </comp>
    <comp lib="5" loc="(960,1260)" name="7-Segment Display">
      <a name="active" val="false"/>
      <a name="decimalPoint" val="false"/>
      <a name="labelvisible" val="true"/>
    </comp>
    <comp loc="(1070,50)" name="sumator_complet">
      <a name="appearance" val="logisim_evolution"/>
      <a name="labelvisible" val="true"/>
    </comp>
    <comp loc="(1080,220)" name="scazator">
      <a name="appearance" val="logisim_evolution"/>
    </comp>
    <comp loc="(1110,400)" name="inmultitor">
      <a name="appearance" val="logisim_evolution"/>
    </comp>
    <comp loc="(1770,130)" name="hex_7seg">
      <a name="appearance" val="logisim_evolution"/>
      <a name="labelvisible" val="true"/>
    </comp>
    <comp loc="(1770,90)" name="hex_7seg">
      <a name="appearance" val="logisim_evolution"/>
      <a name="labelvisible" val="true"/>
    </comp>
    <comp loc="(1910,460)" name="hex_7seg">
      <a name="appearance" val="logisim_evolution"/>
    </comp>
    <comp loc="(1910,500)" name="hex_7seg">
      <a name="appearance" val="logisim_evolution"/>
    </comp>
    <comp loc="(350,150)" name="control_unit">
      <a name="appearance" val="logisim_evolution"/>
    </comp>
    <comp loc="(480,1190)" name="hex_7seg">
      <a name="appearance" val="logisim_evolution"/>
      <a name="labelvisible" val="true"/>
    </comp>
    <comp loc="(480,1230)" name="hex_7seg">
      <a name="appearance" val="logisim_evolution"/>
      <a name="labelvisible" val="true"/>
    </comp>
    <comp loc="(530,470)" name="Impartire">
      <a name="appearance" val="logisim_evolution"/>
    </comp>
    <comp loc="(680,210)" name="incarcator_B8biti">
      <a name="appearance" val="logisim_evolution"/>
    </comp>
    <comp loc="(680,40)" name="incarcator_A8biti">
      <a name="appearance" val="logisim_evolution"/>
    </comp>
    <comp loc="(910,730)" name="hex_7seg">
      <a name="appearance" val="logisim_evolution"/>
    </comp>
    <comp loc="(910,780)" name="hex_7seg">
      <a name="appearance" val="logisim_evolution"/>
    </comp>
    <comp loc="(910,840)" name="hex_7seg">
      <a name="appearance" val="logisim_evolution"/>
    </comp>
    <comp loc="(910,900)" name="hex_7seg">
      <a name="appearance" val="logisim_evolution"/>
    </comp>
    <wire from="(100,1200)" to="(210,1200)"/>
    <wire from="(100,1210)" to="(210,1210)"/>
    <wire from="(100,170)" to="(130,170)"/>
    <wire from="(100,60)" to="(100,170)"/>
    <wire from="(100,60)" to="(390,60)"/>
    <wire from="(1070,50)" to="(1210,50)"/>
    <wire from="(1080,220)" to="(1190,220)"/>
    <wire from="(1090,1230)" to="(1090,1390)"/>
    <wire from="(1110,400)" to="(1150,400)"/>
    <wire from="(1120,1220)" to="(1120,1410)"/>
    <wire from="(1140,1210)" to="(1140,1430)"/>
    <wire from="(1150,400)" to="(1150,640)"/>
    <wire from="(1150,400)" to="(1190,400)"/>
    <wire from="(1190,1230)" to="(1300,1230)"/>
    <wire from="(1190,220)" to="(1190,260)"/>
    <wire from="(1190,220)" to="(1200,220)"/>
    <wire from="(1190,260)" to="(1440,260)"/>
    <wire from="(1190,400)" to="(1190,410)"/>
    <wire from="(1190,410)" to="(1200,410)"/>
    <wire from="(1190,900)" to="(1190,1230)"/>
    <wire from="(1210,120)" to="(1370,120)"/>
    <wire from="(1210,50)" to="(1210,120)"/>
    <wire from="(1210,50)" to="(1250,50)"/>
    <wire from="(1220,1070)" to="(1300,1070)"/>
    <wire from="(1220,840)" to="(1220,1070)"/>
    <wire from="(1250,780)" to="(1250,880)"/>
    <wire from="(1250,880)" to="(1300,880)"/>
    <wire from="(1270,720)" to="(1270,730)"/>
    <wire from="(1270,720)" to="(1300,720)"/>
    <wire from="(1320,1000)" to="(1680,1000)"/>
    <wire from="(1320,1010)" to="(1690,1010)"/>
    <wire from="(1320,1020)" to="(1780,1020)"/>
    <wire from="(1320,1030)" to="(1790,1030)"/>
    <wire from="(1320,1040)" to="(1800,1040)"/>
    <wire from="(1320,1050)" to="(1640,1050)"/>
    <wire from="(1320,1060)" to="(1650,1060)"/>
    <wire from="(1320,1160)" to="(1670,1160)"/>
    <wire from="(1320,1170)" to="(1660,1170)"/>
    <wire from="(1320,1180)" to="(1740,1180)"/>
    <wire from="(1320,1190)" to="(1750,1190)"/>
    <wire from="(1320,1200)" to="(1760,1200)"/>
    <wire from="(1320,1210)" to="(1620,1210)"/>
    <wire from="(1320,1220)" to="(1630,1220)"/>
    <wire from="(1320,650)" to="(1860,650)"/>
    <wire from="(1320,660)" to="(1870,660)"/>
    <wire from="(1320,670)" to="(1590,670)"/>
    <wire from="(1320,680)" to="(1600,680)"/>
    <wire from="(1320,690)" to="(1610,690)"/>
    <wire from="(1320,700)" to="(1330,700)"/>
    <wire from="(1320,710)" to="(1880,710)"/>
    <wire from="(1320,810)" to="(1820,810)"/>
    <wire from="(1320,820)" to="(1830,820)"/>
    <wire from="(1320,830)" to="(2000,830)"/>
    <wire from="(1320,840)" to="(1990,840)"/>
    <wire from="(1320,850)" to="(1980,850)"/>
    <wire from="(1320,860)" to="(1850,860)"/>
    <wire from="(1320,870)" to="(1840,870)"/>
    <wire from="(1330,640)" to="(1330,700)"/>
    <wire from="(1330,640)" to="(1890,640)"/>
    <wire from="(1390,100)" to="(1500,100)"/>
    <wire from="(1390,110)" to="(1500,110)"/>
    <wire from="(1440,260)" to="(1440,480)"/>
    <wire from="(1440,480)" to="(1490,480)"/>
    <wire from="(1490,480)" to="(1490,490)"/>
    <wire from="(1490,490)" to="(1510,490)"/>
    <wire from="(150,760)" to="(150,1160)"/>
    <wire from="(150,760)" to="(570,760)"/>
    <wire from="(1500,110)" to="(1500,130)"/>
    <wire from="(1500,130)" to="(1550,130)"/>
    <wire from="(1500,90)" to="(1500,100)"/>
    <wire from="(1500,90)" to="(1550,90)"/>
    <wire from="(1530,470)" to="(1640,470)"/>
    <wire from="(1530,480)" to="(1640,480)"/>
    <wire from="(1590,570)" to="(1590,670)"/>
    <wire from="(1590,570)" to="(1920,570)"/>
    <wire from="(1600,580)" to="(1600,680)"/>
    <wire from="(1600,580)" to="(1910,580)"/>
    <wire from="(1610,590)" to="(1610,690)"/>
    <wire from="(1610,590)" to="(1900,590)"/>
    <wire from="(1620,600)" to="(1620,1210)"/>
    <wire from="(1620,600)" to="(1770,600)"/>
    <wire from="(1630,610)" to="(1630,1220)"/>
    <wire from="(1630,610)" to="(1760,610)"/>
    <wire from="(1640,460)" to="(1640,470)"/>
    <wire from="(1640,460)" to="(1690,460)"/>
    <wire from="(1640,480)" to="(1640,500)"/>
    <wire from="(1640,500)" to="(1690,500)"/>
    <wire from="(1640,620)" to="(1640,1050)"/>
    <wire from="(1640,620)" to="(1810,620)"/>
    <wire from="(1650,630)" to="(1650,1060)"/>
    <wire from="(1650,630)" to="(1800,630)"/>
    <wire from="(1660,700)" to="(1660,1170)"/>
    <wire from="(1660,700)" to="(1750,700)"/>
    <wire from="(1670,690)" to="(1670,1160)"/>
    <wire from="(1670,690)" to="(1740,690)"/>
    <wire from="(1680,670)" to="(1680,1000)"/>
    <wire from="(1680,670)" to="(1780,670)"/>
    <wire from="(1690,680)" to="(1690,1010)"/>
    <wire from="(1690,680)" to="(1790,680)"/>
    <wire from="(1740,690)" to="(1740,900)"/>
    <wire from="(1740,960)" to="(1740,1180)"/>
    <wire from="(1750,700)" to="(1750,900)"/>
    <wire from="(1750,960)" to="(1750,1190)"/>
    <wire from="(1760,610)" to="(1760,900)"/>
    <wire from="(1760,960)" to="(1760,1200)"/>
    <wire from="(1770,130)" to="(1820,130)"/>
    <wire from="(1770,600)" to="(1770,900)"/>
    <wire from="(1770,90)" to="(1920,90)"/>
    <wire from="(1780,670)" to="(1780,900)"/>
    <wire from="(1780,960)" to="(1780,1020)"/>
    <wire from="(1790,680)" to="(1790,900)"/>
    <wire from="(1790,960)" to="(1790,1030)"/>
    <wire from="(180,240)" to="(180,480)"/>
    <wire from="(180,240)" to="(360,240)"/>
    <wire from="(180,480)" to="(250,480)"/>
    <wire from="(1800,630)" to="(1800,900)"/>
    <wire from="(1800,960)" to="(1800,1040)"/>
    <wire from="(1810,620)" to="(1810,900)"/>
    <wire from="(1820,1020)" to="(2000,1020)"/>
    <wire from="(1820,130)" to="(1820,300)"/>
    <wire from="(1820,300)" to="(1890,300)"/>
    <wire from="(1820,810)" to="(1820,900)"/>
    <wire from="(1820,960)" to="(1820,1020)"/>
    <wire from="(1830,1010)" to="(1990,1010)"/>
    <wire from="(1830,820)" to="(1830,900)"/>
    <wire from="(1830,960)" to="(1830,1010)"/>
    <wire from="(1840,1000)" to="(1980,1000)"/>
    <wire from="(1840,870)" to="(1840,900)"/>
    <wire from="(1840,960)" to="(1840,1000)"/>
    <wire from="(1850,860)" to="(1850,900)"/>
    <wire from="(1860,650)" to="(1860,900)"/>
    <wire from="(1860,960)" to="(1860,990)"/>
    <wire from="(1860,990)" to="(1920,990)"/>
    <wire from="(1870,660)" to="(1870,900)"/>
    <wire from="(1870,960)" to="(1870,980)"/>
    <wire from="(1870,980)" to="(1910,980)"/>
    <wire from="(1880,710)" to="(1880,900)"/>
    <wire from="(1880,960)" to="(1880,970)"/>
    <wire from="(1880,970)" to="(1900,970)"/>
    <wire from="(1890,640)" to="(1890,900)"/>
    <wire from="(1900,590)" to="(1900,970)"/>
    <wire from="(1910,230)" to="(2050,230)"/>
    <wire from="(1910,240)" to="(2060,240)"/>
    <wire from="(1910,250)" to="(2210,250)"/>
    <wire from="(1910,260)" to="(2220,260)"/>
    <wire from="(1910,270)" to="(2230,270)"/>
    <wire from="(1910,280)" to="(2110,280)"/>
    <wire from="(1910,290)" to="(2120,290)"/>
    <wire from="(1910,460)" to="(2060,460)"/>
    <wire from="(1910,500)" to="(1960,500)"/>
    <wire from="(1910,580)" to="(1910,980)"/>
    <wire from="(1920,160)" to="(1930,160)"/>
    <wire from="(1920,570)" to="(1920,990)"/>
    <wire from="(1920,90)" to="(1920,160)"/>
    <wire from="(1950,100)" to="(2260,100)"/>
    <wire from="(1950,110)" to="(2430,110)"/>
    <wire from="(1950,120)" to="(2410,120)"/>
    <wire from="(1950,130)" to="(2380,130)"/>
    <wire from="(1950,140)" to="(2280,140)"/>
    <wire from="(1950,150)" to="(2270,150)"/>
    <wire from="(1950,90)" to="(2250,90)"/>
    <wire from="(1960,500)" to="(1960,670)"/>
    <wire from="(1960,670)" to="(2030,670)"/>
    <wire from="(1980,850)" to="(1980,1000)"/>
    <wire from="(1990,840)" to="(1990,1010)"/>
    <wire from="(200,390)" to="(200,440)"/>
    <wire from="(200,390)" to="(750,390)"/>
    <wire from="(200,440)" to="(280,440)"/>
    <wire from="(2000,830)" to="(2000,1020)"/>
    <wire from="(2050,30)" to="(2050,230)"/>
    <wire from="(2050,30)" to="(2210,30)"/>
    <wire from="(2050,600)" to="(2190,600)"/>
    <wire from="(2050,610)" to="(2200,610)"/>
    <wire from="(2050,620)" to="(2350,620)"/>
    <wire from="(2050,630)" to="(2360,630)"/>
    <wire from="(2050,640)" to="(2370,640)"/>
    <wire from="(2050,650)" to="(2250,650)"/>
    <wire from="(2050,660)" to="(2260,660)"/>
    <wire from="(2060,40)" to="(2060,240)"/>
    <wire from="(2060,40)" to="(2220,40)"/>
    <wire from="(2060,460)" to="(2060,530)"/>
    <wire from="(2060,530)" to="(2070,530)"/>
    <wire from="(2090,460)" to="(2390,460)"/>
    <wire from="(2090,470)" to="(2400,470)"/>
    <wire from="(2090,480)" to="(2570,480)"/>
    <wire from="(2090,490)" to="(2550,490)"/>
    <wire from="(2090,500)" to="(2520,500)"/>
    <wire from="(2090,510)" to="(2420,510)"/>
    <wire from="(2090,520)" to="(2410,520)"/>
    <wire from="(210,1190)" to="(210,1200)"/>
    <wire from="(210,1190)" to="(260,1190)"/>
    <wire from="(210,1210)" to="(210,1230)"/>
    <wire from="(210,1230)" to="(260,1230)"/>
    <wire from="(2110,70)" to="(2110,280)"/>
    <wire from="(2110,70)" to="(2240,70)"/>
    <wire from="(2120,80)" to="(2120,290)"/>
    <wire from="(2120,80)" to="(2230,80)"/>
    <wire from="(2190,400)" to="(2190,600)"/>
    <wire from="(2190,400)" to="(2350,400)"/>
    <wire from="(220,350)" to="(220,420)"/>
    <wire from="(220,350)" to="(770,350)"/>
    <wire from="(220,420)" to="(270,420)"/>
    <wire from="(2200,410)" to="(2200,610)"/>
    <wire from="(2200,410)" to="(2360,410)"/>
    <wire from="(2210,220)" to="(2210,250)"/>
    <wire from="(2210,30)" to="(2210,160)"/>
    <wire from="(2220,220)" to="(2220,260)"/>
    <wire from="(2220,40)" to="(2220,160)"/>
    <wire from="(2230,220)" to="(2230,270)"/>
    <wire from="(2230,80)" to="(2230,160)"/>
    <wire from="(2240,70)" to="(2240,160)"/>
    <wire from="(2250,220)" to="(2250,330)"/>
    <wire from="(2250,330)" to="(2430,330)"/>
    <wire from="(2250,440)" to="(2250,650)"/>
    <wire from="(2250,440)" to="(2380,440)"/>
    <wire from="(2250,90)" to="(2250,160)"/>
    <wire from="(2260,100)" to="(2260,160)"/>
    <wire from="(2260,220)" to="(2260,310)"/>
    <wire from="(2260,310)" to="(2410,310)"/>
    <wire from="(2260,450)" to="(2260,660)"/>
    <wire from="(2260,450)" to="(2370,450)"/>
    <wire from="(2270,150)" to="(2270,160)"/>
    <wire from="(2270,220)" to="(2270,290)"/>
    <wire from="(2270,290)" to="(2380,290)"/>
    <wire from="(2280,140)" to="(2280,160)"/>
    <wire from="(2350,400)" to="(2350,530)"/>
    <wire from="(2350,590)" to="(2350,620)"/>
    <wire from="(2360,410)" to="(2360,530)"/>
    <wire from="(2360,590)" to="(2360,630)"/>
    <wire from="(2370,450)" to="(2370,530)"/>
    <wire from="(2370,590)" to="(2370,640)"/>
    <wire from="(2380,130)" to="(2380,290)"/>
    <wire from="(2380,440)" to="(2380,530)"/>
    <wire from="(2390,460)" to="(2390,530)"/>
    <wire from="(2390,590)" to="(2390,700)"/>
    <wire from="(2390,700)" to="(2570,700)"/>
    <wire from="(2400,470)" to="(2400,530)"/>
    <wire from="(2400,590)" to="(2400,680)"/>
    <wire from="(2400,680)" to="(2550,680)"/>
    <wire from="(2410,120)" to="(2410,310)"/>
    <wire from="(2410,520)" to="(2410,530)"/>
    <wire from="(2410,590)" to="(2410,660)"/>
    <wire from="(2410,660)" to="(2520,660)"/>
    <wire from="(2420,510)" to="(2420,530)"/>
    <wire from="(2430,110)" to="(2430,330)"/>
    <wire from="(250,480)" to="(250,510)"/>
    <wire from="(250,510)" to="(310,510)"/>
    <wire from="(2520,500)" to="(2520,660)"/>
    <wire from="(2550,490)" to="(2550,680)"/>
    <wire from="(2570,480)" to="(2570,700)"/>
    <wire from="(260,460)" to="(260,490)"/>
    <wire from="(260,490)" to="(310,490)"/>
    <wire from="(270,420)" to="(270,530)"/>
    <wire from="(270,530)" to="(310,530)"/>
    <wire from="(280,440)" to="(280,550)"/>
    <wire from="(280,550)" to="(310,550)"/>
    <wire from="(290,40)" to="(420,40)"/>
    <wire from="(350,150)" to="(360,150)"/>
    <wire from="(360,150)" to="(360,240)"/>
    <wire from="(360,150)" to="(370,150)"/>
    <wire from="(360,240)" to="(360,250)"/>
    <wire from="(360,250)" to="(460,250)"/>
    <wire from="(370,140)" to="(370,150)"/>
    <wire from="(370,140)" to="(710,140)"/>
    <wire from="(370,80)" to="(370,140)"/>
    <wire from="(370,80)" to="(460,80)"/>
    <wire from="(380,20)" to="(440,20)"/>
    <wire from="(390,160)" to="(390,230)"/>
    <wire from="(390,160)" to="(790,160)"/>
    <wire from="(390,230)" to="(460,230)"/>
    <wire from="(390,60)" to="(390,160)"/>
    <wire from="(390,60)" to="(460,60)"/>
    <wire from="(420,100)" to="(460,100)"/>
    <wire from="(420,40)" to="(420,100)"/>
    <wire from="(440,20)" to="(440,210)"/>
    <wire from="(440,20)" to="(460,20)"/>
    <wire from="(440,210)" to="(460,210)"/>
    <wire from="(460,20)" to="(460,40)"/>
    <wire from="(480,1190)" to="(630,1190)"/>
    <wire from="(480,1230)" to="(530,1230)"/>
    <wire from="(530,1230)" to="(530,1400)"/>
    <wire from="(530,1400)" to="(600,1400)"/>
    <wire from="(530,470)" to="(570,470)"/>
    <wire from="(570,310)" to="(570,330)"/>
    <wire from="(570,310)" to="(690,310)"/>
    <wire from="(570,330)" to="(580,330)"/>
    <wire from="(570,470)" to="(570,760)"/>
    <wire from="(570,470)" to="(610,470)"/>
    <wire from="(60,1160)" to="(150,1160)"/>
    <wire from="(60,1160)" to="(60,1220)"/>
    <wire from="(60,1220)" to="(80,1220)"/>
    <wire from="(600,630)" to="(600,640)"/>
    <wire from="(600,640)" to="(1150,640)"/>
    <wire from="(620,1330)" to="(760,1330)"/>
    <wire from="(620,1340)" to="(770,1340)"/>
    <wire from="(620,1350)" to="(920,1350)"/>
    <wire from="(620,1360)" to="(930,1360)"/>
    <wire from="(620,1370)" to="(940,1370)"/>
    <wire from="(620,1380)" to="(820,1380)"/>
    <wire from="(620,1390)" to="(830,1390)"/>
    <wire from="(620,590)" to="(670,590)"/>
    <wire from="(620,600)" to="(660,600)"/>
    <wire from="(620,610)" to="(650,610)"/>
    <wire from="(620,620)" to="(640,620)"/>
    <wire from="(630,1190)" to="(630,1260)"/>
    <wire from="(630,1260)" to="(640,1260)"/>
    <wire from="(640,620)" to="(640,900)"/>
    <wire from="(640,900)" to="(690,900)"/>
    <wire from="(650,610)" to="(650,840)"/>
    <wire from="(650,840)" to="(690,840)"/>
    <wire from="(660,1190)" to="(960,1190)"/>
    <wire from="(660,1200)" to="(970,1200)"/>
    <wire from="(660,1210)" to="(1140,1210)"/>
    <wire from="(660,1220)" to="(1120,1220)"/>
    <wire from="(660,1230)" to="(1090,1230)"/>
    <wire from="(660,1240)" to="(990,1240)"/>
    <wire from="(660,1250)" to="(980,1250)"/>
    <wire from="(660,600)" to="(660,780)"/>
    <wire from="(660,780)" to="(690,780)"/>
    <wire from="(670,590)" to="(670,730)"/>
    <wire from="(670,730)" to="(690,730)"/>
    <wire from="(680,210)" to="(730,210)"/>
    <wire from="(680,230)" to="(690,230)"/>
    <wire from="(680,40)" to="(750,40)"/>
    <wire from="(690,230)" to="(690,310)"/>
    <wire from="(70,150)" to="(130,150)"/>
    <wire from="(70,170)" to="(80,170)"/>
    <wire from="(70,190)" to="(130,190)"/>
    <wire from="(710,140)" to="(710,260)"/>
    <wire from="(710,140)" to="(780,140)"/>
    <wire from="(710,260)" to="(710,440)"/>
    <wire from="(710,260)" to="(860,260)"/>
    <wire from="(710,440)" to="(890,440)"/>
    <wire from="(730,210)" to="(740,210)"/>
    <wire from="(730,60)" to="(730,210)"/>
    <wire from="(730,60)" to="(830,60)"/>
    <wire from="(740,210)" to="(740,240)"/>
    <wire from="(740,240)" to="(750,240)"/>
    <wire from="(750,220)" to="(770,220)"/>
    <wire from="(750,240)" to="(750,390)"/>
    <wire from="(750,240)" to="(860,240)"/>
    <wire from="(750,390)" to="(750,420)"/>
    <wire from="(750,40)" to="(750,50)"/>
    <wire from="(750,420)" to="(890,420)"/>
    <wire from="(750,50)" to="(750,220)"/>
    <wire from="(750,50)" to="(850,50)"/>
    <wire from="(760,1130)" to="(760,1330)"/>
    <wire from="(760,1130)" to="(920,1130)"/>
    <wire from="(770,1140)" to="(770,1340)"/>
    <wire from="(770,1140)" to="(930,1140)"/>
    <wire from="(770,220)" to="(770,350)"/>
    <wire from="(770,220)" to="(860,220)"/>
    <wire from="(770,350)" to="(770,400)"/>
    <wire from="(770,400)" to="(890,400)"/>
    <wire from="(780,90)" to="(780,140)"/>
    <wire from="(780,90)" to="(850,90)"/>
    <wire from="(790,160)" to="(790,280)"/>
    <wire from="(790,160)" to="(820,160)"/>
    <wire from="(790,280)" to="(840,280)"/>
    <wire from="(80,170)" to="(100,170)"/>
    <wire from="(80,170)" to="(80,460)"/>
    <wire from="(80,460)" to="(260,460)"/>
    <wire from="(820,110)" to="(820,160)"/>
    <wire from="(820,110)" to="(850,110)"/>
    <wire from="(820,1170)" to="(820,1380)"/>
    <wire from="(820,1170)" to="(950,1170)"/>
    <wire from="(830,1180)" to="(830,1390)"/>
    <wire from="(830,1180)" to="(940,1180)"/>
    <wire from="(830,130)" to="(830,140)"/>
    <wire from="(830,130)" to="(850,130)"/>
    <wire from="(830,140)" to="(850,140)"/>
    <wire from="(830,60)" to="(830,70)"/>
    <wire from="(830,70)" to="(850,70)"/>
    <wire from="(840,280)" to="(840,460)"/>
    <wire from="(840,280)" to="(860,280)"/>
    <wire from="(840,460)" to="(890,460)"/>
    <wire from="(850,140)" to="(850,190)"/>
    <wire from="(890,400)" to="(900,400)"/>
    <wire from="(910,730)" to="(1270,730)"/>
    <wire from="(910,780)" to="(1250,780)"/>
    <wire from="(910,840)" to="(1220,840)"/>
    <wire from="(910,900)" to="(1190,900)"/>
    <wire from="(920,1130)" to="(920,1260)"/>
    <wire from="(920,1320)" to="(920,1350)"/>
    <wire from="(930,1140)" to="(930,1260)"/>
    <wire from="(930,1320)" to="(930,1360)"/>
    <wire from="(940,1180)" to="(940,1260)"/>
    <wire from="(940,1320)" to="(940,1370)"/>
    <wire from="(950,1170)" to="(950,1260)"/>
    <wire from="(960,1190)" to="(960,1260)"/>
    <wire from="(960,1320)" to="(960,1430)"/>
    <wire from="(960,1430)" to="(1140,1430)"/>
    <wire from="(970,1200)" to="(970,1260)"/>
    <wire from="(970,1320)" to="(970,1410)"/>
    <wire from="(970,1410)" to="(1120,1410)"/>
    <wire from="(980,1250)" to="(980,1260)"/>
    <wire from="(980,1320)" to="(980,1390)"/>
    <wire from="(980,1390)" to="(1090,1390)"/>
    <wire from="(990,1240)" to="(990,1260)"/>
  </circuit>
  <vhdl name="control_unit">library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
entity control_unit is
    Port ( Mode : in std_logic_vector(2 downto 0);
           Reset : in std_logic;
           Start : in std_logic;
           Output : out std_logic_vector(2 downto 0));
end control_unit;
architecture Behavioral of control_unit is
begin
    process (Mode, Reset, Start)
    begin
        if Reset = '1' then
            Output &lt;= "000"; 
        elsif Start = '1' then
            case Mode is
                when "001" =&gt;
                    Output &lt;= "001"; --adunare
                when "010" =&gt;
                    Output &lt;= "010"; --scadere
                when "011" =&gt;
                    Output &lt;= "011"; --inmultire
                when "100" =&gt;
                    Output &lt;= "100";  --impartire
                when "101" =&gt;
                    Output &lt;= "101";  	
                when "110" =&gt;
                    Output &lt;= "110"; 	
                when "111" =&gt;
                    Output &lt;= "111"; 
                when others =&gt;
                    Output &lt;= "000"; 
            end case;
        end if;
    end process;

end Behavioral;</vhdl>
  <vhdl name="sumator_complet">library IEEE;
use IEEE.STD_LOGIC_1164.ALL;

entity sumator_complet is
    port(
        A, B: in std_logic_vector(7 downto 0);
        Mode: in std_logic_vector(2 downto 0);
        Reset: in std_logic;
        CarryIn: in std_logic;
        Rezultat: out std_logic_vector(7 downto 0);
        CarryOut: out std_logic
    );
end sumator_complet;

architecture behavioral of sumator_complet is
begin
    process(Reset, A, B, Mode, CarryIn)
        variable carry: std_logic := CarryIn;
    begin
        if Reset = '1' then
            Rezultat &lt;= (others =&gt; '0');
            carry := '0';
        elsif mode = "001" then
            for i in 0 to 7 loop
                Rezultat(i) &lt;= A(i) xor B(i) xor carry;
                carry := (A(i) and B(i)) or (A(i) and carry) or (B(i) and carry);
            end loop;
        else
            Rezultat &lt;= (others =&gt; '0');
            carry := '0';
        end if;
        
        CarryOut &lt;= carry;
    end process;
end behavioral;
</vhdl>
  <vhdl name="scazator">library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.numeric_std.all; 
entity scazator is
    Port ( A : in std_logic_vector(7 downto 0);
           B : in std_logic_vector(7 downto 0);
           Mode : in std_logic_vector(2 downto 0);
           Reset : in std_logic;
           Rezultat : out std_logic_vector(7 downto 0));
end scazator;

architecture Behavioral of scazator is
begin

    process (A, B, Mode, Reset)
    begin
        if Reset = '1' then
            Rezultat &lt;= (others =&gt; '0');
        elsif Mode = "010" then 
            Rezultat &lt;= std_logic_vector(unsigned(A) + (not unsigned(B) + 1));
        else
            Rezultat &lt;= (others =&gt; '0'); 
        end if;
    end process;

end Behavioral;
</vhdl>
  <vhdl name="inmultitor">library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

entity inmultitor is
    port (
        A : in std_logic_vector(7 downto 0);
        B : in std_logic_vector(7 downto 0);
        Mode : in std_logic_vector(2 downto 0);
        Reset : in std_logic;
        Rezultat : out std_logic_vector(15 downto 0)
    );
end inmultitor;

architecture Behavioral of inmultitor is
begin
    process (Reset, A, B, Mode)
        variable tmp_p : std_logic_vector(15 downto 0) := (others =&gt; '0');
    begin
        if Reset = '1' then 
            tmp_p := (others =&gt; '0');
        elsif Mode = "011" then 
            tmp_p := (others =&gt; '0');
            for i in 0 to 7 loop
                if B(i) = '1' then
                    tmp_p := std_logic_vector(unsigned(tmp_p) + shift_left(unsigned(A), i));
                end if;
            end loop;
        else 
            tmp_p := (others =&gt; '0');
        end if;
        Rezultat &lt;= tmp_p;
    end process;
end Behavioral;
</vhdl>
  <vhdl name="incarcator_A8biti">library ieee;
use ieee.std_logic_1164.all;
entity incarcator_A8biti is
    port (
        clk : in std_logic;        
        reset : in std_logic;      
        mode : in std_logic_vector(2 downto 0); 
        data_in : in std_logic_vector(7 downto 0); 
        data_out : out std_logic_vector(7 downto 0); 
        load : out std_logic
    );
end incarcator_A8biti;

architecture Behavioral of incarcator_A8biti is
    signal numar : std_logic_vector(7 downto 0); 
begin
    process(clk, reset)
    begin
        if reset = '1' then
            numar &lt;= (others =&gt; '0'); 
            load &lt;= '0'; 
        elsif rising_edge(clk) then
            if mode = "110" then 
                numar &lt;= data_in; 
                load &lt;= '1'; 
            else
                load &lt;= '0'; 
            end if;
        end if;
    end process;
    data_out &lt;= numar; 
end Behavioral;
</vhdl>
  <vhdl name="incarcator_B8biti">library ieee;
use ieee.std_logic_1164.all;
entity incarcator_B8biti is
    port (
        clk : in std_logic;        
        reset : in std_logic;     
        mode : in std_logic_vector(2 downto 0); 
        data_in : in std_logic_vector(7 downto 0); 
        data_out : out std_logic_vector(7 downto 0); 
        load : out std_logic       
    );
end incarcator_B8biti;
architecture Behavioral of incarcator_B8biti is
    signal numar : std_logic_vector(7 downto 0); 
begin
    process(clk,reset)
    begin
        if reset = '1' then
            numar &lt;= (others =&gt; '0'); 
            load &lt;= '0'; 
        elsif rising_edge(clk) then
            if mode = "110" then 
                numar &lt;= data_in;
                load &lt;= '1'; 
            else
                load &lt;= '0'; 
            end if;
        end if;
    end process;

    data_out &lt;= numar; 
end Behavioral;
</vhdl>
  <vhdl name="hex_7seg">LIBRARY ieee;
USE ieee.std_logic_1164.all;

ENTITY hex_7seg IS

  PORT (
 hex_in: in std_logic_vector(3 downto 0);
  		a_b_c_d_e_f_g: out std_logic_vector(6 downto 0));

END hex_7seg;

ARCHITECTURE TypeArchitecture OF hex_7seg IS

BEGIN

	a_b_c_d_e_f_g &lt;= "0000001" when hex_in= x"0" else
				  "1001111" when hex_in= x"1" else
				  "0010010" when hex_in= x"2" else
				  "0000110" when hex_in= x"3" else
				  "1001100" when hex_in= x"4" else
				  "0100100" when hex_in= x"5" else
				  "0100000" when hex_in= x"6" else
				  "0001111" when hex_in= x"7" else
				  "0000000" when hex_in= x"8" else
				  "0000100" when hex_in= x"9" else
				  "0001000" when hex_in= x"A" else
				  "1100000" when hex_in= x"B" else
				  "0110001" when hex_in= x"C" else
				  "1000010" when hex_in= x"d" else
				  "0110000" when hex_in= x"E" else
				  "0111000" when hex_in= x"F" else
				  "1111111";

END TypeArchitecture;

</vhdl>
  <vhdl name="Scazator2">library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

entity Scazator2 is
    port (
        A, B: in std_logic_vector(7 downto 0);
        Mode: in std_logic_vector(2 downto 0);
        Rezultat: out std_logic_vector(7 downto 0);
        Reset: in std_logic
    );
end Scazator2;

architecture Behavioral of Scazator2 is
begin
    process(a, b, mode, reset)
        variable temp: unsigned(7 downto 0);
    begin
        if reset = '1' then
            Rezultat &lt;= (others =&gt; '0');
        elsif mode = "100" then
            temp := unsigned(a);
            
            for i in 0 to 7 loop
                if temp(i) = '1' and b(i) = '0' then
                    Rezultat(i) &lt;= '1';
                elsif temp(i) = '0' and b(i) = '1' then
                    Rezultat(i) &lt;= '1';
                    temp(i+1 downto 0) := temp(i+1 downto 0) - unsigned(b(i+1 downto 0));
                else
                    Rezultat(i) &lt;= '0';
                end if;
            end loop;
        else
            Rezultat &lt;= (others =&gt; '0');
        end if;
    end process;
end Behavioral;
</vhdl>
  <vhdl name="Impartire">library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.NUMERIC_STD.ALL;

entity Impartire is
    Port (
        clk    : in  std_logic;
        Reset  : in  std_logic;
        Mode   : in  std_logic_vector(2 downto 0);
        A      : in  std_logic_vector(7 downto 0);
        B      : in  std_logic_vector(7 downto 0);
        Rezultat      : out std_logic_vector(7 downto 0);
        Done   : out std_logic
    );
end Impartire;

architecture Behavioral of Impartire is
    function divide(a: unsigned; b: unsigned) return unsigned is
        variable a1 : unsigned(a'length-1 downto 0) := a;
        variable b1 : unsigned(b'length-1 downto 0) := b;
        variable p1 : unsigned(b'length downto 0) := (others =&gt; '0');
        variable i : integer := 0;
    begin
        for i in 0 to b'length-1 loop
            p1(b'length-1 downto 1) := p1(b'length-2 downto 0);
            p1(0) := a1(a'length-1);
            a1(a'length-1 downto 1) := a1(a'length-2 downto 0);
            p1 := p1 - b1;
            if p1(b'length-1) = '1' then
                a1(0) := '0';
                p1 := p1 + b1;
            else
                a1(0) := '1';
            end if;
        end loop;
        return a1;
    end divide;
    signal dividend_reg : unsigned(7 downto 0);
    signal divisor_reg  : unsigned(7 downto 0);
    signal quotient_reg : unsigned(7 downto 0);
    signal done_reg     : std_logic;

begin
    process (clk)
    begin
        if rising_edge(clk) then
            if reset = '1' then
                dividend_reg &lt;= (others =&gt; '0');
                divisor_reg &lt;= (others =&gt; '0');
                quotient_reg &lt;= (others =&gt; '0');
                done_reg &lt;= '0';
            else
                if Mode = "100" then
                    dividend_reg &lt;= unsigned(A);
                    divisor_reg &lt;= unsigned(B);
                    quotient_reg &lt;= divide(dividend_reg, divisor_reg);
                    done_reg &lt;= '1';
                else
                    done_reg &lt;= '0';
                end if;
            end if;
        end if;
    end process;
     Rezultat&lt;= std_logic_vector(quotient_reg);
    	Done &lt;= done_reg;
end Behavioral;
</vhdl>
</project>
